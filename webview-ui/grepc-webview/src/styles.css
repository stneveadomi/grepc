/* You can add global styles to this file, and also import other style files */

@import '../node_modules/@vscode/codicons/dist/codicon.css';

html,
body {
    height: 100%;
}

body {
    padding: 0;
    background-color: var(--vscode-sideBar-background);
    font-family: var(--vscode-font-family);
}

div {
    display: inline-flex;
}

h2 {
    margin: 0;
    color: var(--vscode-debugIcon-breakpointDisabledForeground);
}

app-occurrence {
    display: inline-flex;
    flex-direction: column;
    gap: 4px;
}

.circle {
    display: flex;
    align-items: center;
    justify-content: center;
    align-items: flex-end;

    border-radius: 50%;
    background-color: var(--vscode-badge-background);
    color: var(--vscode-badge-foreground);
    height: 16px;
    min-width: 16px;
    padding: 2px;
}

.clickable {
    cursor: pointer;
}

.rule-header,
.decoration-header,
.occurrences-header,
.child-decoration-header {
    display: flex;
    flex-direction: row;
    text-transform: uppercase;
    font-weight: bold;
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap;
    padding: 4px;
    min-height: 1.6em;

    border-top: 1px solid rgb(73, 73, 73);
    border-bottom: 1px solid rgb(73, 73, 73);
}

.rule-id {
    gap: 0.25em;
}

.rule-container {
    display: flex;
    flex-direction: column;
    min-width: 100%;
    width: 100%;
}

.center {
    justify-content: center;
}

.drop-down {
    padding: 0 4px;
    transition: all 0.1s;
}

.block {
    display: block !important;
    position: relative;
}

.color-picker * {
    display: block;
}

.color-picker {
    display: block;
}

.fixed {
    display: none !important;
}

.rule-header-container .open {
    transform: rotate(90deg);
}

.rule-header-container .closed {
    transform: rotate(0deg);
}

.gripper {
    cursor: grab;
}

.grabbed * {
    cursor: grabbing !important;
}

.grabbed {
    cursor: grabbing !important;
}

.ng-invalid {
    border: 1px solid red !important;
    outline: 1px solid red !important;
}

.codicon {
    display: inline-flex;
    text-align: center;
    align-items: center;
    align-content: center;
}

.codicon[class*='codicon-'].codicon-info {
    font-size: 6pt;
}

.codicon[class*='codicon-'] {
    display: inline-flex;
}

.rule-header-container {
    display: inline-flex;
}

.preview {
    position: relative;
    top: -1px;
}

/* Chrome input type number - set spin button to less ugly color */
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
    filter: invert(99%) sepia(0%) saturate(1668%) hue-rotate(304deg)
        brightness(108%) contrast(60%);
}

.occurrence-list .occurrence-text {
    margin-bottom: 5px;
    width: 98%;
    background-color: transparent;
}

.input-label {
    display: block;
    position: relative;
}

.input-checkbox {
    margin-top: 1em;
    display: inline-flex;
    flex-direction: row-reverse;
    align-items: center;

    label {
        margin-left: 0;
        font-size: 14px;
    }
}

input,
select {
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    width: 100%;
    height: 24px;
    position: relative;
    display: block;
    padding: 3px 0 3px 6px;
    box-sizing: border-box;
    border-radius: 2px;
    border: 1px solid var(--vscode-input-border);
    margin-left: 2em;
}

select {
    margin: 0;
}

input[type='checkbox'] {
    padding: 0;
    margin: auto 0;
    margin-right: 1em;
    height: 16px;
    width: 16px;
}

span {
    display: inline-flex;
}

label {
    margin: auto;
    font-size: 11px;
    font-weight: 400;
    overflow: hidden;
    padding: 0 0 0;
    text-overflow: ellipsis;
    white-space: nowrap;
}

input:focus::placeholder {
    opacity: 1;
}

input::placeholder {
    opacity: 0;
}

input[type='text'].rule-id-input {
    padding: 0;
    margin: 0;
    color: var(--vscode-editor-foreground);
    font-family: var(--vscode-font-family);
    font-weight: bold;
    font-size: var(--vscode-font-size);

    text-transform: uppercase;
}

.edit-mode-container {
    width: 100%;
}

app-edit-mode {
    width: 100%;
}
